# SQL table creation for the CITY Library version 2

DROP DATABASE IF EXISTS citylibrary;
CREATE DATABASE IF NOT EXISTS citylibrary;
USE citylibrary;

# create all the tables

# READER
DROP TABLE IF EXISTS READER;
CREATE TABLE READER (
    RID INT AUTO_INCREMENT PRIMARY KEY,
    RTYPE VARCHAR(50),
    RNAME VARCHAR(50),
    RADDRESS VARCHAR(200),
    PHONE_NO VARCHAR(13)
);

# RESERVATION
DROP TABLE IF EXISTS RESERVATION;
CREATE TABLE RESERVATION (
    RES_NO INT AUTO_INCREMENT PRIMARY KEY,
    DTIME DATETIME
);

# BORROWING
DROP TABLE IF EXISTS BORROWING;
CREATE TABLE BORROWING (
    BOR_NO INT AUTO_INCREMENT PRIMARY KEY,
    BDTIME DATETIME,
    RDTIME DATETIME
);

# BRANCH
DROP TABLE IF EXISTS BRANCH;
CREATE TABLE BRANCH (
    BID INT AUTO_INCREMENT PRIMARY KEY,
    LNAME VARCHAR(50),
    LOCATION VARCHAR(50)
);

# PUBLISHER
DROP TABLE IF EXISTS PUBLISHER;
CREATE TABLE PUBLISHER (
    PUBLISHERID INT AUTO_INCREMENT PRIMARY KEY,
    PUBNAME VARCHAR(50),
    ADDRESS VARCHAR(100)
);

# PERSON
DROP TABLE IF EXISTS PERSON;
CREATE TABLE PERSON (
    PID INT AUTO_INCREMENT PRIMARY KEY,
    PNAME VARCHAR(50)
);

# DOCUMENT
DROP TABLE IF EXISTS DOCUMENT;
CREATE TABLE DOCUMENT (
    DOCID INT AUTO_INCREMENT PRIMARY KEY,
    TITLE VARCHAR(50),
    PDATE DATE,
    PUBLISHERID INT,
    FOREIGN KEY (PUBLISHERID)
        REFERENCES PUBLISHER (PUBLISHERID)
        ON DELETE CASCADE
);

# COPY
DROP TABLE IF EXISTS COPY;
CREATE TABLE COPY (
    DOCID INT,
    COPYNO INT,
    BID INT,
    POSITION VARCHAR(20),
    PRIMARY KEY (DOCID , COPYNO , BID),
    FOREIGN KEY (DOCID)
        REFERENCES DOCUMENT (DOCID)
        ON DELETE CASCADE,
    FOREIGN KEY (COPYNO)
        REFERENCES BRANCH (BID)
        ON DELETE CASCADE
);

# RESERVES
DROP TABLE IF EXISTS RESERVES;
CREATE TABLE RESERVES (
    RID INT,
    RESERVATION_NO INT,
    DOCID INT,
    COPYNO INT,
    BID INT,
    PRIMARY KEY (RESERVATION_NO , DOCID , COPYNO , BID),
    FOREIGN KEY (DOCID , COPYNO , BID)
        REFERENCES COPY (DOCID , COPYNO , BID)
        ON DELETE CASCADE,
    FOREIGN KEY (RESERVATION_NO)
        REFERENCES RESERVATION (RES_NO)
        ON DELETE CASCADE,
    FOREIGN KEY (RID)
        REFERENCES READER (RID)
        ON DELETE CASCADE
);

# BORROWS
DROP TABLE IF EXISTS BORROWS;
CREATE TABLE BORROWS (
    BOR_NO INT,
    DOCID INT,
    COPYNO INT,
    BID INT,
    RID INT,
    PRIMARY KEY (BOR_NO , DOCID , COPYNO , BID),
    FOREIGN KEY (DOCID , COPYNO , BID)
        REFERENCES COPY (DOCID , COPYNO , BID)
        ON DELETE CASCADE,
    FOREIGN KEY (BOR_NO)
        REFERENCES BORROWING (BOR_NO)
        ON DELETE CASCADE,
    FOREIGN KEY (RID)
        REFERENCES READER (RID)
        ON DELETE CASCADE
);

# BOOK
DROP TABLE IF EXISTS BOOK;
CREATE TABLE BOOK (
    DOCID INT PRIMARY KEY,
    ISBN VARCHAR(50),
    FOREIGN KEY (DOCID)
        REFERENCES DOCUMENT (DOCID)
        ON DELETE CASCADE
);

# AUTHORS
DROP TABLE IF EXISTS AUTHORS;
CREATE TABLE AUTHORS (
    PID INT,
    DOCID INT,
    PRIMARY KEY (PID , DOCID),
    FOREIGN KEY (PID)
        REFERENCES PERSON (PID)
        ON DELETE CASCADE,
    FOREIGN KEY (DOCID)
        REFERENCES BOOK (DOCID)
        ON DELETE CASCADE
);

# JOURNAL_VOLUME
DROP TABLE IF EXISTS JOURNAL_VOLUME;
CREATE TABLE JOURNAL_VOLUME (
    DOCID INT PRIMARY KEY,
    VOLUME_NO INT,
    EDITOR INT,
    FOREIGN KEY (DOCID)
        REFERENCES DOCUMENT (DOCID)
        ON DELETE CASCADE,
    FOREIGN KEY (EDITOR)
        REFERENCES PERSON (PID)
        ON DELETE CASCADE
);

# JOURNAL_ISSUE
DROP TABLE IF EXISTS JOURNAL_ISSUE;
CREATE TABLE JOURNAL_ISSUE (
    DOCID INT,
    ISSUE_NO INT,
    SCOPE VARCHAR(100),
    PRIMARY KEY (DOCID , ISSUE_NO),
    FOREIGN KEY (DOCID)
        REFERENCES JOURNAL_VOLUME (DOCID)
        ON DELETE CASCADE
);

# GEDITS
DROP TABLE IF EXISTS GEDITS;
CREATE TABLE GEDITS (
    PID INT,
    DOCID INT,
    ISSUE_NO INT,
    PRIMARY KEY (DOCID , ISSUE_NO , PID),
    FOREIGN KEY (PID)
        REFERENCES PERSON (PID)
        ON DELETE CASCADE,
    FOREIGN KEY (DOCID , ISSUE_NO)
        REFERENCES JOURNAL_ISSUE (DOCID , ISSUE_NO)
        ON DELETE CASCADE
);

# PROCEEDINGS
DROP TABLE IF EXISTS PROCEEDINGS;
CREATE TABLE PROCEEDINGS (
    DOCID INT PRIMARY KEY,
    CDATE DATE,
    CLOCATION VARCHAR(50),
    CEDITOR VARCHAR(50),
    FOREIGN KEY (DOCID)
        REFERENCES DOCUMENT (DOCID)
        ON DELETE CASCADE
);

# CHAIRS
DROP TABLE IF EXISTS CHAIRS;
CREATE TABLE CHAIRS (
    PID INT,
    DOCID INT,
    PRIMARY KEY (PID , DOCID),
    FOREIGN KEY (PID)
        REFERENCES PERSON (PID)
        ON DELETE CASCADE,
    FOREIGN KEY (DOCID)
        REFERENCES PROCEEDINGS (DOCID)
        ON DELETE CASCADE
);












